# -*- coding: utf-8 -*-
"""TASK-5-EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jWvFRVUjqD-nGkci-5fA5vD9OQkAtQPO
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
df = pd.read_csv('/content/Sample - Superstore.csv', encoding='latin-1')
display(df.head())

print(df.describe(include='all'))

print(df.info())

print(df.isnull().sum())
print("Duplicate rows:", df.duplicated().sum())
categorical_cols = df.select_dtypes(include='object').columns
for col in categorical_cols:
    print(f"\nValue counts for {col}:\n", df[col].value_counts())

numeric_cols = df.select_dtypes(include=['float64', 'int64']).columns
for col in numeric_cols:
    plt.figure(figsize=(6, 4))
    sns.histplot(df[col], kde=True)
    plt.title(f'Distribution of {col}')
    plt.show()

plt.figure(figsize=(10, 6))
sns.heatmap(df[numeric_cols].corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

sns.pairplot(df[numeric_cols])
plt.show()

plt.figure(figsize=(8, 5))
sns.scatterplot(x='Discount', y='Profit', data=df)
plt.title('Profit vs Discount')
plt.show()

plt.figure(figsize=(10, 5))
sns.barplot(x='Category', y='Profit', data=df, estimator=sum, ci=None)
plt.title('Total Profit per Category')
plt.show()

plt.figure(figsize=(10, 5))
sns.barplot(x='Category', y='Sales', data=df, estimator=sum, ci=None)
plt.title('Total Sales per Category')
plt.show()

plt.figure(figsize=(10, 5))
sns.boxplot(x='Segment', y='Profit', data=df)
plt.title('Profit Distribution by Customer Segment')
plt.show()

sns.scatterplot(data=df, x='Sales', y='Profit', hue='Category', palette='Set2')
plt.title('Sales vs Profit Colored by Category')
plt.xlabel('Sales')
plt.ylabel('Profit')
plt.legend(title='Category')
plt.tight_layout()
plt.show()

sns.regplot(data=df, x='Discount', y='Profit', scatter_kws={'alpha':0.4}, line_kws={'color':'red'})
plt.title('Discount vs Profit with Regression Line')
plt.xlabel('Discount')
plt.ylabel('Profit')
plt.tight_layout()
plt.show()

sns.boxplot(data=df, x='Region', y='Profit', hue='Segment', palette='pastel')
plt.title('Profit Distribution by Region and Segment')
plt.xlabel('Region')
plt.ylabel('Profit')
plt.legend(title='Segment')
plt.tight_layout()
plt.show()

subcat_profit = df.groupby('Sub-Category')['Profit'].sum().sort_values()
sns.barplot(x=subcat_profit.values, y=subcat_profit.index, palette='coolwarm')
plt.title('Total Profit by Sub-Category')
plt.xlabel('Total Profit')
plt.ylabel('Sub-Category')
plt.tight_layout()
plt.show()

sns.set(style="whitegrid")
num_cols = ['Sales', 'Quantity', 'Discount', 'Profit']
fig, axes = plt.subplots(4, 3, figsize=(18, 20))
for i, col in enumerate(num_cols):
    sns.histplot(df[col], kde=True, ax=axes[i, 0], color='skyblue')
    axes[i, 0].set_title(f'Histogram of {col}')
for i, col in enumerate(num_cols):
    sns.boxplot(x=df[col], ax=axes[i, 1], color='lightgreen')
    axes[i, 1].set_title(f'Boxplot of {col}')
for i, col in enumerate(num_cols):
    if col != 'Sales':
        sns.scatterplot(x=df['Sales'], y=df[col], ax=axes[i, 2], color='coral')
        axes[i, 2].set_title(f'Sales vs {col}')
    else:
        axes[i, 2].axis('off')

plt.tight_layout()
plt.show()